@page "/dashboard"
@layout AdminLayout
@using System
@using System.Collections.Generic
@inject IApplicationService appServ
@inject IAppService mobileAppServ

<PageTitle>Dashboard - Printing Press Admin</PageTitle>

<div class="container p-4 md:p-6">
    <h1 class="text-2xl font-bold mb-6">Dashboard</h1>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        <div class="card">
            <div class="card-header">
                <h3>Total Users</h3>
                <i class="fas fa-users"></i>
            </div>
            <div class="card-content">
                @if (_users != null)
                {
                <div class="card-value">@_users.Count()</div>
                <div class="card-trend">Mobile App Users</div>
                    
                }
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>Active Orders</h3>
                <i class="fas fa-print"></i>
            </div>
            <div class="card-content">
                @if (OrderItems != null)
                {
                <div class="card-value">@OrderItems.Count()</div>
                    <div class="card-trend">@OrderItems.Where(i => i.Status == "Pending").Count() still pending</div>
                    
                }
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>Applications</h3>
                <i class="fas fa-file-alt"></i>
            </div>
            <div class="card-content">
                @if (appModel != null)
                {
                    
                <div class="card-value">@appModel.Count()</div>
                    <div class="card-trend">@appModel.Where(i => i.status == "pending").Count() pending</div>
                
                }
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>Feedback</h3>
                <i class="fas fa-chart-line"></i>
            </div>
            <div class="card-content">
                @if (feedBacks != null)
                {
                    <div class="card-value">@feedBacks.Count()</div>
                    <div class="card-trend">@feedBacks.Where(i => i.status == false).Count() unread messages</div>
                    
                }
            </div>
        </div>
    </div>
</div>

@code {
    List<ApplicationModel> appModel = new List<ApplicationModel>();
    List<feedBackModel> feedBacks = new List<feedBackModel>();
    List<OrderItem> OrderItems = new List<OrderItem>();
    private List<Users> _users = new List<Users>();

    // Dashboard logic would go here
    protected override async Task OnInitializedAsync()
    {
        appModel = await appServ.getApplicationList();
        feedBacks = await appServ.getFeedBackList();

        OrderItems = await mobileAppServ.GetOrdersAsync();
        _users = await appServ.GetUsersAsync();
    }
}
